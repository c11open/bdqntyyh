<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<!-- 第1种方式： 引用 hibernate.cfg.xml -->
	<!-- <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean> --> 
	<!-- 第2种方式 ： 不建立  hibernate.cfg.xml  -->
	<!-- 1. 定义dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 指定JDBC驱动类 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver">
		</property>
		<!-- 提供连接数据库的URL地址 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl">
		</property>	
		<!-- 提供连接数据库的用户名和密码 -->
		<property name="username" value="bdqn"></property>
		<property name="password" value="bdqn"></property>
	</bean>
	
	<!-- 2. 定义SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		
		<!-- 添加Hibernate配置参数 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.OracleDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<!-- 引入映射文件所在的目录 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:cn/bdqn/entity</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置DAO -->
	<bean id="userDao" class="cn.Dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置业务逻辑层 -->
	<bean id="userService" class="cn.Service.UserServiceImpl">
		<!-- name值是Service中的属性值 -->
		<!-- ref是配置Dao的id值 -->
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<!-- 配置Action -->
	<!-- <bean id="userAction" class="cn.houserent.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean> -->
	
	<!-- 定义事务管理器 :提供对事务处理的全面支持和统一管理-->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 通过 <tx:advice> 标签定义事务增强，并指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 定义事务属性,声明事务规则 -->
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="register" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 定义切面 -->
	<aop:config>
		<!-- 定义切入点 -->
		<aop:pointcut id="serviceMethod"
			expression="execution(* cn.Service.*.*(..))" />
		<!-- 将事务通知与切入点组合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>
</beans>